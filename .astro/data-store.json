[["Map",1,2,9,10,105,106],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.4.2","content-config-digest","f56624a837db5547","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://royletron.dev\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","post",["Map",11,12,31,32,47,48,67,68,86,87],"2022-03-22-voncount",{"id":11,"data":13,"body":25,"filePath":26,"assetImports":27,"digest":29,"legacyId":30,"deferredRender":17},{"title":14,"description":15,"image":16,"featured":17,"canonical":18,"published":17,"publishDate":19,"excerpt":20,"category":21,"tags":22},"Von Count","I vant to count your lines!","__ASTRO_IMAGE_~/assets/images/scm/vc.png",true,"https://royletron.dev/2022-03-22-voncount",["Date","2022-03-22T00:00:00.000Z"],"We recently found need to count lines of our code, but with added context that things like `cloc` can't give us. Basically at a glance we wanted to see the use of certain features/components/libraries so that we could phase them out slowly over time and see progress 🧮.","Projects",[23,24],"libraries","oss","To that end [we produced _VonCount_](https://github.com/ventureharbour/voncount)\n\n**VonCount** produces tables of results for folders of source code, those results are determined by an optional configuration. The configuration can decide any number of `groups` which are named and are specified by patterns that match the start and end of a particular block of something. For example _documentation_ where you want to count lines between `/**` and `*/`:\n\n```json title=\"count.json\"\n{\n  \"groups\": [\n    {\n      \"name\": \"documentation\",\n      \"between\": {\n        \"start\": \"^\\\\/\\\\*\\\\*\",\n        \"end\": \"^ \\\\*/$\"\n      }\n    }\n  ]\n}\n```\n\nThese will then be matched and counted alongside the rest of the source, producing a table that shows total lines, number of lines in your groups and the representation as a % of those groups.\n\n```bash\nnpm install -g voncount\nvoncount run .\n┌────────────────┬───────┬─────────────────┬───────┐\n│ Path           │ Lines │ 'documentation' │     % │\n├────────────────┼───────┼─────────────────┼───────┤\n│ test           │   232 │              19 │  8.19 │\n│   components   │   207 │              19 │  9.18 │\n│     Header.js  │    18 │               4 │ 22.22 │\n│     Content.js │   179 │              15 │  8.38 │\n│     Footer.js  │    10 │               0 │     0 │\n│   pages        │    25 │               0 │     0 │\n│     index.js   │    25 │               0 │     0 │\n└────────────────┴───────┴─────────────────┴───────┘\n\n```\n\nAnd you get a neat breakdown of it all 🚀!\n\n_We are still pretty early_ with our build on this, but feel it's useful so will be investing more and more time into it. It's great for developer led metrics, and removing/adding certain facets to your code base [give it a try](https://www.npmjs.com/package/voncount).","src/content/post/2022-03-22-voncount.mdx",[28],"~/assets/images/scm/vc.png","85bea7e9ee1e9703","2022-03-22-voncount.mdx","2022-02-28-wrestly",{"id":31,"data":33,"body":41,"filePath":42,"assetImports":43,"digest":45,"legacyId":46,"deferredRender":17},{"title":34,"description":35,"image":36,"featured":17,"canonical":37,"published":17,"publishDate":38,"excerpt":39,"category":21,"tags":40},"Wrestly","Wrestling with rest? Try Wrestly!","__ASTRO_IMAGE_~/assets/images/scm/wrestly1.png","https://royletron.dev/2022-02-28-wrestly",["Date","2022-02-28T00:00:00.000Z"],"This week we have been working with remote APIs, Webhooks and OAuth. Those alone will be blogged about plenty in the future, but in doing this task we have bourne another mini project that we have found really useful.",[23,24],"Typically, when doing this sort of work, I've always had this habit of running a dummy server that logs out requests and blindly responds to them. This helps me see what is going on, and what external things are either redirecting or posting directly to our APIs. Up to now I have never really done much more than run a server where all requests are `console.log`'ed and `res.send('ok')`'ed, but this time around added an SQLite backed so I could see request history, and a nice front end so the payloads were readable. [So here is _wrestly_](https://npmjs.com/wrestly)\n\n**Wrestly** is a simple http server that will accept any requests and store their `body`, `headers` and `cookies` as well as any `query` params into a SQLite DB. It allows you to list the requests already made, and look at each one in detail. We don't really focus on the response, it just gives you a nice `200` and whatever the contents of the original request was. Routes that go via `/api/**/*` paths will always respond with JSON - which was useful for us - otherwise it just shows Wrestly's own webpage with the contents of the original request. It'll parse any `JSON` or `x-www-form-urlencoded` bodies included with requests, and it'll also record the `method` and `url`.\n\n![Lists of requests that have come in](../../assets/images/screens/Wrestly-List.png)\n\nYou can access the list view at `http://localhost:6789/_x` and it should show all recorded requests to date. _Note_ that by default requests are stored in memory, so if you quit `wrestly` and start again it'll clear saved requests. You can override this by setting a designated `sqlite` file with the `-d` eg.\n\n```bash\nwrestly -d ./requests.sqlite\n```\n\n\u003Cfigcaption align=\"center\">View of a single request\u003C/figcaption>\n\n![Details of a single request](../../assets/images/screens/Wrestly-api-useful.png)\n\nCombine this with something like [`ngrok`](https://ngrok.com) and you have a pretty whizzy environment for working on external webhooked services etc.","src/content/post/2022-02-28-wrestly.mdx",[44],"~/assets/images/scm/wrestly1.png","16a24f0e1bfe0890","2022-02-28-wrestly.mdx","2024-01-01-games-i-have-loved",{"id":47,"data":49,"body":61,"filePath":62,"assetImports":63,"digest":65,"legacyId":66,"deferredRender":17},{"title":50,"description":51,"image":52,"featured":53,"canonical":54,"published":17,"publishDate":55,"excerpt":56,"category":57,"tags":58},"The Games I Have Loved","How planning perfects the perfect game","__ASTRO_IMAGE_~/assets/images/gen/game.png",false,"https://royletron.dev/2024-01-01-games-i-have-loved",["Date","2024-01-01T00:00:00.000Z"],"How taking time and money seriously ensures gaming joy, at least most of the time.","Games",[59,60],"retro","games-i-have-loved","import Photos from \"~/components/common/Photos.astro\";\n\n\nI've loved video games for as long as I can remember, and throughout that time there have been some real standout moments of gaming joy. For me the real crackers are the ones that live up to the image that I have of them in my head before playing. As a serial planner, I spend quite a lot of time researching - reading reviews, comments and speaking to friends - before I buy a game. When I was little this was because of the financial neccesity of only being able to afford a few games a year, but now it's more about how little _time_ I have.\n\n### The games I have loved\n\nI want to go back and revisit all of the games that I have loved, from the very beginning to today. This will take the form of a series of deep dives, so this list will slowly change it a collection of links to the post detailing each game. The only way for something to reach this list is something I have played through at least once, and have a real fondness for.\n\nimport jsw from \"~/assets/images/games/jsw.gif\";\nimport swos from \"~/assets/images/games/swos.webp\";\nimport tp from \"~/assets/images/games/tp.jpeg\";\nimport zelda from \"~/assets/images/games/zelda.png\";\n\n\u003CPhotos ratio=\"4/3\" images={[jsw, swos, tp, zelda]} />\n\n#### The Early Years\n\nIt's interesting to see how UK centric the titles on the early list are, but I guess that just goes to show how much the UK was punching above its weight in the early days of gaming.\n\n* Jet Set Willy: ZX Spectrum\n* Fantasy World Dizzy: ZX Spectrum\n* The Legend of Zelda, Links Awakening: Gameboy\n* Sensible World of Soccer: Amiga\n* Cannon Fodder: Amiga\n* Theme Park: Amiga\n\nimport cm2 from \"~/assets/images/games/cm2.png\";\nimport gta from \"~/assets/images/games/gta.jpeg\";\nimport lemmings from \"~/assets/images/games/lemmings.png\";\nimport th from \"~/assets/images/games/th.jpeg\";\n\n\u003CPhotos ratio=\"4/3\" images={[cm2, gta, lemmings, th]} />\n\n#### The Late Childhood Years\n\nThis period was really focussed on strategy games, and I think it's down to the fact that I loved the games that I could go at creatively. Still interesting to see that it continues to be dominated by UK produced titles, something I was never really consious of at the time!\n\n* Lemmings 2: The Tribes: Amiga\n* Championship Manager 2: PC\n* Theme Hospital: PC\n* Quake: PC\n* GTA: PC\n* Rollercoaster Tycoon: PC\n\nimport ff7 from \"~/assets/images/games/ff7.webp\";\nimport golden from \"~/assets/images/games/golden.webp\";\nimport gta3 from \"~/assets/images/games/gta3.webp\";\nimport ffx from \"~/assets/images/games/ffx.jpeg\";\n\n\u003CPhotos ratio=\"4/3\" images={[ff7, golden, gta3, ffx]} />\n\n#### The Teenage Years\n\nI hadn't really owned a console until I was in a position to save and buy one myself, up to this point I had to run stuff on hand me down computers.\n\n* Final Fantasy VII: PlayStation\n* Goldeneye: Nintendo 64\n* GTA III: PlayStation 2\n* Final Fantasy X: PlayStation 2\n\nimport vt from \"~/assets/images/games/vt.jpeg\";\nimport shenmue from \"~/assets/images/games/shenmue.jpeg\";\nimport f3 from \"~/assets/images/games/f3.jpeg\";\nimport mc from \"~/assets/images/games/mc.webp\";\n\n\u003CPhotos ratio=\"4/3\" images={[vt, shenmue, f3, mc]} />\n\n#### The 20's\n\nHeading into university was a big shift in gaming for me, because I had more people to game with. There are a lot of incredibly fun multiplayer games that start creeping in here, as well as more cultured story driven stuff.\n\n* Virtua Tennis: Dreamcast\n* Shenmue: Dreamcast\n* Burnout 2: Xbox\n* Fallout 3: PlayStation 3\n* Minecraft: PC\n\nimport bg3 from \"~/assets/images/games/bg3.webp\";\nimport ghost from \"~/assets/images/games/ghost.webp\";\nimport mario from \"~/assets/images/games/mario.webp\";\nimport nms from \"~/assets/images/games/nms.jpeg\";\n\n\u003CPhotos ratio=\"4/3\" images={[bg3, ghost, mario, nms]} />\n\n#### The 30's\n\nThe shift to a very deliberate and careful choices starts around here - as well as stuff I can play with the kids.\n\n* Fallout 4: PlayStation 4\n* No Mans Sky: PlayStation 4\n* Ghost of Tsushima: PlayStation 4\n* Mario Odyssey: Nintendo Switch\n* Zelda Breath of the Wild: Nintendo Switch\n* Baldur's Gate: PC","src/content/post/2024-01-01-games-i-have-loved.mdx",[64],"~/assets/images/gen/game.png","09df8aeba16b2958","2024-01-01-games-i-have-loved.mdx","2024-02-19-too-much-bg3",{"id":67,"data":69,"body":80,"filePath":81,"assetImports":82,"digest":84,"legacyId":85,"deferredRender":17},{"title":70,"description":71,"image":72,"featured":17,"canonical":73,"published":53,"publishDate":74,"excerpt":75,"category":57,"tags":76},"Baldur's Gate 3","My new life as Asterion.","__ASTRO_IMAGE_~/assets/images/gen/bg3.png","https://royletron.dev/2024-02-19-too-much-bg3",["Date","2024-02-19T00:00:00.000Z"],"My time in Baldur's Gate 3 has been a whirlwind of emotions and the most surreal situations I have ever encounted in a videogame. From working out who murdered a clown, to deciding the fate of 7,000 vampires - it's been a wild ride from start to finish.\n",[77,78,79],"pc","rpg","baldursgate3","I was given Baldur's Gate 3 by my partner as a whimsy Christmas present. I had done the research and heard all of the good things but I had already decided that I was going to give a while to get a little cheaper before jumping in. I was wrong. I was so wrong. I should have been playing this game from day one.\n\n\n### Quick Primer\n\nI had heard of but never really got into the previous iterations of Baldur's Gate, so it's worth giving a quick run down of what it is about. Effectively, it's pretty much the only official Dungeons and Dragons game that has broke mainstream popularity - and that's because it plays very much like it's pen and paper counterpart. It's a top down, isometric RPG with a heavy focus on story and character development. It's a game that is very much about the journey and not the destination, where the choices along the way all contribute to where you go and what you do. The mechanics and the lore are all very much D&D, so if you're a fan of the tabletop game, you'll feel right at home - but if you're not, maybe this will help you see what all the fuss is about.\n\n### My Story\n\nSo to start off with you're presented with the ability to create your own character. I personally decided to take one of the pre-canned mainline characters, **Asterion**, as I wanted to get into the game as quickly as possible - I had alread read a lot about his story line and thought it would be a hoot. Asterion is a _high-elf_ and happens to be a _vampire_. He's a rogue - which makes him a little bit of a coniving back-stabbing kind of guy - and I always love the idea of sneaking about and taking people out before they have time to react. The choice of pre-canned characters gives a good selection of other classes and play styles, from full on mages that cast powerful spells, to definsive clerics and strong weapon laden warriors. The game is very much about choice and you can play it however you want.","src/content/post/2024-02-19-too-much-bg3.mdx",[83],"~/assets/images/gen/bg3.png","634d0ee06f409bdb","2024-02-19-too-much-bg3.mdx","2022-12-03-hiring",{"id":86,"data":88,"body":99,"filePath":100,"assetImports":101,"digest":103,"legacyId":104,"deferredRender":17},{"title":89,"description":90,"image":91,"featured":17,"canonical":92,"published":17,"publishDate":93,"excerpt":94,"category":95,"tags":96},"How To Hire Engineers","Shifting the focus in engineering interviews to ensure you get more trust and knowledge on candidates, whilst also protecting them from getting the wrong message!","__ASTRO_IMAGE_~/assets/images/hiring.png","https://royletron.dev/2022-12-03-hiring",["Date","2022-12-03T00:00:00.000Z"],"Hiring engineers is horribly difficult, you either have to make a call on someone with a tiny window of visibility or create a lengthy process that puts people off. In this article I show you how to hit that sweet spot of teasing out whether a candidate has the desired skills and behaviors, without spending weeks getting there.","Managing",[97,98],"managing","engineering","We have a simple rule when it comes to hiring - **focus on trust**. Developers come in so many different varieties and are typically rated based on their ability to code, or their understanding of the `process` of development. Our aim in interviewing is to focus on how _trustworthy_ the individual is: _can we trust that they will work autonomously and take charge of their development?_ This can sound quite bizarre, and maybe a little offputting at first, but in reality this just means that you want to hear more about the individual than you do their code. My approach to this, is an interview process that _focuses on how their team works day-to-day_, and benchmarking their technical expertise - which helps our understanding of the investment we would have to place in the candidate post hire.\n\n## Candidate scoring\n\nAs well as answering the fundamental question around trust, we also have to score the candidate against how we feel they will perform in the role - this is particularly vital in interviews for heavily contested roles (a really nice problem to have). We rate candidates across the same core areas that we expect them to perform in their role:\n\n- 🏆 **Results** - the tangible business benefit of their effort. Will they deliver products, take ownership of their work, make positive decisions and create impact in their field?\n- ⭐ **Direction** - where the business is headed. Will they contribute to driving the business in the right direction, spot opportunities and pitfalls and help to steer the company?\n- 🌲 **Talent** - nurturing existing and contributing to find new hires. Will they push their own personal and professional development, help level up the team as a whole and contribute to hiring?\n- 🌈 **Culture** - maintaining our values and working environment. Will they collaborate with everyone fairly, communicate clearly and contribute to the heart of the company?\n- 🦉 **Craft** - technical ability. Do they have the skills currently (raw or experienced) that we are looking for?\n\nOur scoring is much like a _golf scoring card_, where we have a baseline for the role that is expected, we can then go two points above, or two points below that baseline. We expect that there could be some work required to get the individual to the required standard, but having this scoring allows us to compare candidates objectively.\n\n## The Engineer Interview\n\n### First Interview: Technical Screening\n\nPrior to the interview we will ask the candidate to do one of two prepared technical tasks, tailored to be achievable in under 90 minutes. A large part of me loathes the use of technical tasks, but the alternative is to put the candidate on the spot during a meeting - but we’re not assessing how well a candidate can reason through nervousness, so an at-home test is a fairer approach. The end product of the technical task isn’t code - and we never ask directly for code to be provided. Instead we ask the candidate to present us through what they put together (we may request to look at the code in the session or ask them how they did certain things - but really the code always has to be theirs).\n\n\n![Presenting their journey through the code](../../assets/images/hiring/1.png)\n\nThis presentation is really important, and we instruct the candidate that we would like to see what choices they could’ve made as well as the choice they did make. As a fully remote team your ability to communicate effectively with peers on code, choices and architecture is actually more important than the code itself. Our aim is to find the candidates who can do this well, as we know they’re going to be much more effective when it comes to learning and developing.\n\n### First Interview: They Interview You\n\nDuring the first interview it is also vital that you give the candidate the opportunity to interview the company. This is so often overlooked, or candidates are asked to just `email` questions over because the interview is running late - this can’t be allowed to happen.\n\n![Give lots of space for their code](../../assets/images/hiring/2.png)\n\n### Second Interview: Collaboration & Team Fit\n\nWhen progressing to a second interview we then take the development exercise one step further, inviting them to participate in a pair programming session with another of our developers - this requires no preparation prior to the session. Ideally this should be someone they have yet to meet - it’s important this person is seen less as an interviewer and more as a `future peer`. The paired task is always on the candidate's original submission project - again their code, their laptop, their session. The task is usually quite small and in code terms quite redundant, but represents a real day-to-day requirement of our team. They’ll be provided with a ticket and given the space to breathe - this needs to be conducted in something where work is happening, not an interview room.\n\n![Get straight to pairing!](../../assets/images/hiring/3.png)\n\nOnce complete we will ask the candidate and their pair to present back their solution to the ticket. The pairing developer knows to focus less on code and more on ‘what they would code’, so the task doesn’t have to end with delivery. Once complete - or at least solved logically - we invite the candidate and their pair to discuss with the interviewing party what they have done. We get their pair on the same side of the table to best replicate what day to day team work would be like, and how they handle that. Once the ‘development’ aspect is complete we move on to a more traditional Q&A to try to score them on the other areas outside of day-to-day work.\n\n## What we are looking for\n\nThis process attempts to emulate our working day as closely as possible - pairing is a really effective exercise for all our team members and is vital to our day to day. What we ask our pairing developers to do is to note the sorts of things that came up during the conversations:\n\n- Did they explain what exposure they have had to a particular technology?\n- Did they try to reason about the problem with a pseudo shorthand?\n- Did they ask questions about the ticket?\n- Did they look to break the ticket down into a number of different functions/classes etc?\n- Did they suggest looking up any documentation/other reference implementations (yes, I mean Stack Overflow)?\n\nIt’s not to say that any of these is more important, or that there are any right answers, but the gist of what we want to see is they take the ticket seriously, focus on breaking down the issue, consider things before jumping in, and use the pair effectively.\n\n## Making a decision\n\nOur aim with all of the interviews is to get a number of score cards from the interviewers involved. _Not all of them can be complete_ - as developers will focus on the craft aspect and maybe miss some parts of culture or talent and vice versa with the management Q&A - but we end up with a complete picture. _In most cases_ we can simply average the scores across scorecards, but where bigger disparities exist this will be the trigger for a conversation about that particular area - our aim here is always to have a singular rated scorecard.\n\n![Score carding is essential](../../assets/images/hiring/4.png)\n\nWith all the numbers in you may be able to see a clear objective winner, but sometimes a balancing act is required to judge whether having a higher `craft` is more or less desirable compared to `results`. Whatever happens, it’s important to _trust your scoring_ - if you don’t then you need to rethink how you are scoring. Once a scored decision is made it’s important to review that against a more subjective decision, including asking interviewing members to make their choice is important too. We tend to only allow the objective score to lead our decision, but if the subjective `winner` is different then it calls for a review.\n\n## Process post mortem\n\nWe have a strong culture of retrospection, we are always looking at everything we do to see if it can be optimised or automated. From CEO through to coders, we empower people to put forward when something isn’t working for them, and work across the business to find solutions. Hiring is no exception, and when we get a new hire this represents _a really good opportunity_ to question whether the process worked from their perspective. We find this to be a less useful exercise on day one, but after several months - even as part of a probation review - we ask questions about the process of how they came into the job. The questions aren’t rigid, but you want to pick at their experience of the process as an outsider.\n\n- Did they find the pairing panic inducing?\n- Did our presentation of the role match the current reality?\n- Could we have done more to make them feel welcome?\n- Would they like to have seen more or less during the Q&A?\n\nRegardless of how mature you believe your hiring process is, it is **vital** that you constantly evaluate it. The world changes, people evolve and different things become important to them - if you don’t recognise that you will fail. Get hiring right, and a lot of things click into place.","src/content/post/2022-12-03-hiring.mdx",[102],"~/assets/images/hiring.png","81a3031d02a7da28","2022-12-03-hiring.mdx","scm",["Map",107,108,116,117],"wrestly",{"id":107,"data":109,"body":112,"filePath":113,"digest":114,"legacyId":115,"deferredRender":17},{"title":34,"description":110,"image":111},"Wrestle that rest","~/assets/images/scm/wrestly.svg","We often have situtations where we want to mock an API and see that something is attempting to call and consume it. **Wrestly** is an app to do just that!","src/content/scm/wrestly.mdx","d50ee93c7fb97401","wrestly.mdx","voncount",{"id":116,"data":118,"body":121,"filePath":122,"digest":123,"legacyId":124,"deferredRender":17},{"title":14,"description":119,"image":120},"I vant to count your lines","~/assets/images/scm/voncount.svg","There have been many times where we wanted to perform some sort of metric analysis to count instances of specific coding styles or patterns. The idea was `voncount`, named after the Count Von Count of course, would check a repository of files and return statistics on the number of occurancies of particular things. Using this, we were able to provide a percentage of the usage of a particular thing, and hopefully see that number go up or down. For example, if you wanted to deprecate the use of `!important` in your CSS files, you could create a configuration that would give you that percentage as a number, then set an objective for the team to lower that!","src/content/scm/voncount.mdx","56185e163aa81e37","voncount.mdx"]