{"data":{"site":{"siteMetadata":{"title":"Royletron.dev","author":"Darren"}},"markdownRemark":{"id":"499b579f-dbb3-5338-94c7-10d51b624899","excerpt":"If you have followed most of these lessons carefully chances are you should be\nable to knock up some reasonable looking HTML that looks a bit like this: If so…","html":"<p>If you have followed most of these lessons carefully chances are you should be\nable to knock up some reasonable looking HTML that looks a bit like this:</p>\n<iframe width=\"100%\" height=\"510\" src=\"//jsfiddle.net/royletron/y5cpv8o6/2/embedded/result/\" allowfullscreen=\"allowfullscreen\" allowpaymentrequest frameborder=\"0\"></iframe>\n<p>If so you are right on track! What we want to do next is elevate this plain\nlooking content into something amazing, and to do that we need CSS.</p>\n<h2>Syntaxing CSS</h2>\n<p>CSS is a technology built into most modern browsers that allows web developers\nto style the content that they have sent to users. Your browser will take the\nHTML and the CSS - which is usally a file called a ‘stylesheet’ - and then\nprocess the CSS on top of the HTML to render what it is the developer wanted it\nto look like. This means that the CSS directly references the HTML that it was\nbuilt for, and contains code that defines the ‘style’. So let’s take a look at\nsome</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>A CSS style as shown above (this is a single style - you can write as many as\nyou want) has two parts, the first bit is the ‘selector’ - in the above case\n<code class=\"language-text\">body</code> - and this tells the browser what elements it should apply this style\ntoo. The second part is the bit inside <code class=\"language-text\">{ }</code> which is the ‘declaration block’ and\nlists all of the CSS ‘properties’ this style wants to change and their value -\nthis always follows the pattern <code class=\"language-text\">property: value;</code> ensuring the <code class=\"language-text\">;</code> at the end of each individual\ndeclaration. In the above example we are selecting the <code class=\"language-text\">body</code> tag and we are\nsetting the <code class=\"language-text\">background</code> property to be value <code class=\"language-text\">orange</code> and then <code class=\"language-text\">color</code> property\nto be value <code class=\"language-text\">blue</code>. More on those later.</p>\n<h2>Cascading Down</h2>\n<p>An important feature of CSS is that it ‘cascades’ down from parent to child\nelement in the HTML you have defined - in fact CSS stands for ‘cascading style\nsheets’. What this means in reality is that any style applied to an element is\nalso applied to it’s children. For example consider the following HTML and CSS:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>Hello<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> World\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">span</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This would result in:</p>\n<iframe width=\"100%\" height=\"110\" src=\"//jsfiddle.net/royletron/g0anersp/embedded/result/\" allowfullscreen=\"allowfullscreen\" allowpaymentrequest frameborder=\"0\"></iframe>\n<p>With all of the elements inside of the <code class=\"language-text\">body</code> being made <code class=\"language-text\">bold</code> and <code class=\"language-text\">red</code>, and\nany <code class=\"language-text\">span</code> element being <code class=\"language-text\">blue</code>. The <code class=\"language-text\">p</code> tag never has a style applied but as it\nis a child of <code class=\"language-text\">body</code> it gets all of the style defined there.</p>\n<h2>Selecting</h2>\n<p>There are so many ways of selecting elments based on some criteria, the one we\nused above is based on the type of the element we want to select, but you can\nalso be incredibly specific. Here are all of the possible ways to select\nelements using CSS. Trust me, you don’t need to spend time memorizing it! But\nit’s useful as a reference (<em>totally stolen from Wikipedia</em>). At the bottom I\nwill sumarize the important ones to get started.</p>\n<table>\n<thead>\n<tr>\n<th>Pattern</th>\n<th>Matches</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>E</td>\n<td>an element of type E</td>\n</tr>\n<tr>\n<td>E:link</td>\n<td>an E element is the source anchor of a hyperlink of which the target is not yet visited (:link) or already visited (:visited)</td>\n</tr>\n<tr>\n<td>E:active</td>\n<td>an E element during certain user actions</td>\n</tr>\n<tr>\n<td>E::first-line</td>\n<td>the first formatted line of an E element</td>\n</tr>\n<tr>\n<td>E::first-letter</td>\n<td>the first formatted letter of an E element</td>\n</tr>\n<tr>\n<td>.c</td>\n<td>all elements with class=“c”</td>\n</tr>\n<tr>\n<td>#myid</td>\n<td>the element with id=“myid”</td>\n</tr>\n<tr>\n<td>E.warning</td>\n<td>an E element whose class is “warning” (the document language specifies how class is determined)</td>\n</tr>\n<tr>\n<td>E#myid</td>\n<td>an E element with ID equal to “myid”</td>\n</tr>\n<tr>\n<td>E F</td>\n<td>an F element descendant of an E element</td>\n</tr>\n<tr>\n<td>*</td>\n<td>any element</td>\n</tr>\n<tr>\n<td>E[foo]</td>\n<td>an E element with a “foo” attribute</td>\n</tr>\n<tr>\n<td>E[foo=“bar”]</td>\n<td>an E element whose “foo” attribute value is exactly equal to “bar”</td>\n</tr>\n<tr>\n<td>E[foo~=“bar”]</td>\n<td>an E element whose “foo” attribute value is a list of whitespace-separated values, one of which is exactly equal to “bar”</td>\n</tr>\n<tr>\n<td>E[foo</td>\n<td>=“en”]</td>\n</tr>\n<tr>\n<td>E:first-child</td>\n<td>an E element, first child of its parent</td>\n</tr>\n<tr>\n<td>E:lang(fr)</td>\n<td>an element of type E in language “fr” (the document language specifies how language is determined)</td>\n</tr>\n<tr>\n<td>E::before</td>\n<td>generated content before an E element’s content</td>\n</tr>\n<tr>\n<td>E::after</td>\n<td>generated content after an E element’s content</td>\n</tr>\n<tr>\n<td>E > F</td>\n<td>an F element child of an E element</td>\n</tr>\n<tr>\n<td>E + F</td>\n<td>an F element immediately preceded by an E element</td>\n</tr>\n<tr>\n<td>E[foo^=“bar”]</td>\n<td>an E element whose “foo” attribute value begins exactly with the string “bar”</td>\n</tr>\n<tr>\n<td>E[foo$=“bar”]</td>\n<td>an E element whose “foo” attribute value ends exactly with the string “bar”</td>\n</tr>\n<tr>\n<td>E[foo*=“bar”]</td>\n<td>an E element whose “foo” attribute value contains the substring “bar”</td>\n</tr>\n<tr>\n<td>E:root</td>\n<td>an E element, root of the document</td>\n</tr>\n<tr>\n<td>E:nth-child(n)</td>\n<td>an E element, the n-th child of its parent</td>\n</tr>\n<tr>\n<td>E:nth-last-child(n)</td>\n<td>an E element, the n-th child of its parent, counting from the last one</td>\n</tr>\n<tr>\n<td>E:nth-of-type(n)</td>\n<td>an E element, the n-th sibling of its type</td>\n</tr>\n<tr>\n<td>E:nth-last-of-type(n)</td>\n<td>an E element, the n-th sibling of its type, counting from the last one</td>\n</tr>\n<tr>\n<td>E:last-child</td>\n<td>an E element, last child of its parent</td>\n</tr>\n<tr>\n<td>E:first-of-type</td>\n<td>an E element, first sibling of its type</td>\n</tr>\n<tr>\n<td>E:last-of-type</td>\n<td>an E element, last sibling of its type</td>\n</tr>\n<tr>\n<td>E:only-child</td>\n<td>an E element, only child of its parent</td>\n</tr>\n<tr>\n<td>E:only-of-type</td>\n<td>an E element, only sibling of its type</td>\n</tr>\n<tr>\n<td>E:empty</td>\n<td>an E element that has no children (including text nodes)</td>\n</tr>\n<tr>\n<td>E:target</td>\n<td>an E element being the target of the referring URI</td>\n</tr>\n<tr>\n<td>E:enabled</td>\n<td>a user interface element E that is enabled</td>\n</tr>\n<tr>\n<td>E:disabled</td>\n<td>a user interface element E that is disabled</td>\n</tr>\n<tr>\n<td>E:checked</td>\n<td>a user interface element E that is checked (for instance a radio-button or checkbox)</td>\n</tr>\n<tr>\n<td>E:not(s)</td>\n<td>an E element that does not match simple selector s</td>\n</tr>\n<tr>\n<td>E ~ F</td>\n<td>an F element preceded by an E element</td>\n</tr>\n</tbody>\n</table>\n<h3>Important Selectors</h3>\n<h4>No.1 The tag name</h4>\n<p>By far the easiest is the tag name, this will apply the style to all tags that\nhave this as their tag type.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>No.2 The class name</h4>\n<p>Any html element can have an attribute called ‘id’ associated to it:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>main<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>My Magic Blog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>content<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Some amazing articles<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Which can then be selected in CSS like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">#content</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>With the format <code class=\"language-text\">#name_of_class</code>.</p>\n<h4>No.3 The class name</h4>\n<p>Any html element can also have an attribute called ‘class’ associated to it:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>subtitle<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Welcome here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>body<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>So nice to have you<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Which can then be selected in CSS like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.subtitle</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>With the format <code class=\"language-text\">.name_of_class</code>. The difference between a <code class=\"language-text\">class</code> and <code class=\"language-text\">id</code> is\nactually minimal, but most developers will tell you to only ever have one single\ntag with a given <code class=\"language-text\">id</code> but you can have as many as you want with a given <code class=\"language-text\">class</code>.\nSo bad would be:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>content<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Hey this is some content<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>content<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Hey this even more content<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>But good:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>content<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Hey this is some content<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>content<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Hey this even more content<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>Attributes &#x26; Values</h2>\n<p>There are so many different CSS attributes that you can modify and each one has\na different set of values that you can apply to it. There is a <a href=\"https://www.w3schools.com/cssref/\">full\nlist</a> but that is quite scary, here are some\nkey ones.</p>\n<h4>Color</h4>\n<p>This is the color of the text inside the element. All colors in CSS can be\ndefined in one of several ways, either as a shorthand ‘word’ - things like\n<code class=\"language-text\">red</code>, <code class=\"language-text\">blue</code>, <code class=\"language-text\">yellow</code>, <code class=\"language-text\">white</code>, <code class=\"language-text\">green</code>, <code class=\"language-text\">black</code> or <code class=\"language-text\">PeachPuff</code>… <a href=\"https://www.w3schools.com/colors/colors_names.asp\">see the\nfull list</a>. Colors can also\nbe defined as a ‘hexidecimal’ value which always start with a <code class=\"language-text\">#</code> like <code class=\"language-text\">#ffffff</code>\nwhich is white. They can also be defined as ‘rgb’ or ‘rgba’ values - which\ndefine how much ‘red’, ‘green’ and ‘blue’ (between 0 and 255) go into them with\nan optional ‘alpha’ which is transparent the color will be. Here are some examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.red</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.black</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.blue</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>0, 0, 255<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.gray</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* this is actually transparent black, but will look gray on white */</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0, 0, 0, 0.3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Which looks like this</p>\n<iframe width=\"100%\" height=\"150\" src=\"//jsfiddle.net/royletron/myera3k2/1/embedded/result/\" allowfullscreen=\"allowfullscreen\" allowpaymentrequest frameborder=\"0\"></iframe>","frontmatter":{"title":"Lesson 4 - CSS!","date":"March 16, 2019"}}},"pageContext":{"slug":"/lesson-4/","previous":{"fields":{"slug":"/lesson-3/"},"frontmatter":{"title":"Lesson 3 - Document Object Model (DOM)"}},"next":{"fields":{"slug":"/lesson-5/"},"frontmatter":{"title":"Lesson 4 - The Box Model"}}}}