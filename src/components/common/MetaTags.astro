---
import { AstroSeo } from "@astrolib/seo";
import { MetaSEO } from "~/types";
import { getCanonical, getAsset } from "~/utils/permalinks";
import { getRelativeUrlByFilePath } from "~/utils/directories";
export interface Props extends MetaSEO {
  dontUseTitleTemplate?: boolean;
}
const defaultImage = "";
const {
  title = "Royletron",
  description = "",
  image: _image = defaultImage,
  canonical = getCanonical(String(Astro.url.pathname)),
  noindex = false,
  nofollow = false,
  ogTitle = title,
  ogType = "website",
  dontUseTitleTemplate = false,
} = Astro.props;

console.log(_image);
const image =
  typeof _image === "string"
    ? new URL(_image, Astro.site)
    : _image && typeof _image["src"] !== "undefined"
    ? // @ts-ignore
      new URL(getRelativeUrlByFilePath(_image.src), Astro.site)
    : null;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<AstroSeo
  title={title}
  titleTemplate={dontUseTitleTemplate ? "%s" : `Royletron ~ %s`}
  description={description}
  canonical={String(canonical)}
  noindex={noindex}
  nofollow={nofollow}
  openGraph={{
    url: String(canonical),
    title: ogTitle,
    description: description,
    type: ogType,
    images: image
      ? [
          {
            url: image.toString(),
            alt: ogTitle,
          },
        ]
      : undefined,
    // site_name: 'SiteName',
  }}
  twitter={{
    // handle: '@handle',
    // site: '@site',
    cardType: image ? "summary_large_image" : undefined,
  }}
/>

<link rel="shortcut icon" href={getAsset("/favicon.ico")} />
<link rel="icon" type="image/svg+xml" href={getAsset("/favicon.svg")} />
<link rel="mask-icon" href={getAsset("/favicon.svg")} color="#8D46E7" />
